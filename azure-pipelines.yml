trigger:
- '*'

pool:
  name: 'Default'

variables:
  solution: '**/FiapFase1.sln'
  apiProject: 'FiapFase1.Api/FiapFase1.Api.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1
  displayName: 'Preparando pacotes NuGet'

- task: NuGetCommand@2
  displayName: 'Restaurando pacotes NuGet'
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: 'Build API Project'
  inputs:
    solution: '$(apiProject)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\ApiApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  displayName: 'Executando Testes da API'
  inputs:
    testAssemblyVer2: '$(Build.SourcesDirectory)/**/bin/$(buildConfiguration)/**/FiapFase1.Tests.dll'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: PublishBuildArtifacts@1
  displayName: 'Publicando Artefatos da API'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)\ApiApp.zip'
    ArtifactName: 'ArtefatoAPI'

# Publicando no Azure App Service (projeto da API)
- task: AzureRmWebAppDeployment@4
  displayName: 'Publicar API no Azure App Service'
  inputs:
    azureSubscription: 'Assinatura do Azure 1 (db5db7fd-149c-4ccb-9268-d9e4c37ab9c0)'
    appType: 'webApp'
    WebAppName: 'techchallenge-api'
    package: '$(Build.ArtifactStagingDirectory)\ApiApp.zip'
